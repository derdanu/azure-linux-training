[
    {
        "name": "SA-UM-001",
        "description": "Create a group with the name 'learners'",
        "points": 1,
        "validation": {
            "type": "shell",
            "code": "test $(cat /etc/group | grep learners | wc -l) -eq 1"
        }
    }, 
    {
        "name": "SA-UM-002",
        "description": "Add a user with the name 'student1'",
        "points": 1,
        "validation": {
            "type": "shell",
            "code": "test $(cat /etc/passwd | grep student1 | wc -l) -eq 1"
        }
    },
    {
        "name": "SA-UM-003",
        "description": "Add user 'student1' to the group 'learners' while leaving the primary group unchanged",
        "points": 1,
        "validation": {
            "type": "shell",
            "code": "test $(cat /etc/group | grep student1 | grep learners | wc -l) -gt 0"
        }
    },
    {
        "name": "SA-FS-001",
        "description": "Create a directory '/opt/alt/exams' which is readable/writeable by its owner and by users of the group 'learners'",
        "points": 2,
        "validation": {
            "type": "shell",
            "code": "test $(ls -al /opt/alt/ | grep -e 'drwxrwx---\\+ [0-9] [a-zA-Z]\\+ learners .\\+ exams' | wc -l) -eq 1"
        }
    },
    {
        "name": "SA-FS-002",
        "description": "Create the file '/opt/alt/README' and set the immutable flag",
        "points": 2,
        "validation": {
            "type": "shell",
            "code": "test $(lsattr /opt/alt/ | grep README | grep -e '----i--------e-- .\\+' | wc -l) -eq 1"
        }
    },
    {
        "name": "SA-BR-001",
        "description": "Create a backup '/opt/alt/exams.tar.gz' with the recursive content of /opt/alt/exams",
        "points": 1,
        "validation": {
            "type": "shell",
            "code": "test $(cd /tmp/; tar -xvjf /opt/alt/exams.tar.gz; ls -al | grep exams | wc -l) -eq 1"
        }
    },
    {
        "name": "LS-RA-001",
        "description": "Add a new sudo rule to allow user 'student1' to run '/sbin/ifconfig' without providing a password",
        "points": 1,
        "validation": {
            "type": "shell",
            "code": "test $(cat /etc/sudoers | grep -e 'student1.\\+NOPASSWD: /sbin/ifconfig' | wc -l) -eq 1"
        }
    },
    {
        "name": "FS-001",
        "description": "Create a new LVM volume group 'vg0' with the physical volumes /dev/sdc and /dev/sdd",
        "points": 2,
        "constraints": 1,
        "validation": {
            "type": "shell",
            "code": "test $(pvdisplay -c | grep -e '/dev/sd[cd]:vg0' | wc -l) -eq 2 && test $(vgdisplay -c | grep -e 'vg0' | wc -l) -eq 1"
        }
    },
    {
        "name": "FS-002",
        "description": "Create a logical volume 'exams' in volume group 'vg0'",
        "points": 1,
        "constraints": 1,
        "validation": {
            "type": "shell",
            "code": "test $(lvdisplay -c | grep /dev/vg0/exams:vg0 | wc -l) -eq 1"
        }
    },
    {
        "name": "FS-003",
        "description": "Format '/dev/vg0/exams' with ext4",
        "points": 2,
        "constraints": 1,
        "validation": {
            "type": "shell",
            "code": "test $(blkid /dev/vg0/exams | grep ext4 | wc -l) -eq 1"
        }
    }
]